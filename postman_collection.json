{
  "info": {
    "name": "Document Management Service API",
    "description": "API Collection for Document Management Service Challenge\n\nüöÄ Quick Start:\n1. Ensure the application is running on http://localhost:8080\n2. For Upload: Replace the file path with an actual PDF file\n3. For Download: First search for documents, then copy a documentId from the results\n\nüìã Test Flow:\n1. Health Check ‚Üí Verify service is running\n2. Upload Document ‚Üí Upload a test PDF\n3. Search All ‚Üí Find your uploaded document and copy its ID\n4. Download ‚Üí Use the copied ID to get download URL",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Upload Document",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "metadata",
              "value": "{\"user\":\"john\",\"name\":\"contract\",\"tags\":[\"important\",\"legal\"]}",
              "type": "text",
              "contentType": "application/json"
            },
            {
              "key": "file",
              "type": "file",
              "src": "",
              "contentType": "application/pdf",
              "description": "‚ö†Ô∏è IMPORTANT: Click 'Select Files' and choose a PDF file from your computer"
            }
          ]
        },
        "url": {
          "raw": "http://localhost:8080/document-management/upload",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["document-management", "upload"]
        },
        "description": "üì§ Upload a PDF document with metadata\n\n‚úÖ Requirements:\n- File must be a PDF (.pdf extension)\n- Content-Type must be application/pdf\n- Max file size: 500MB\n- User, name, and tags are required\n\nüìù Metadata Fields:\n- user: Username who owns the document\n- name: Document name (without .pdf extension)\n- tags: Array of tags (at least one required)\n\n‚ö†Ô∏è Before sending:\n1. Update the 'metadata' JSON with your values\n2. Click 'Select Files' to choose a PDF file"
      },
      "response": []
    },
    {
      "name": "Search All Documents",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{}"
        },
        "url": {
          "raw": "http://localhost:8080/document-management/search?page=0&size=20",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["document-management", "search"],
          "query": [
            {
              "key": "page",
              "value": "0",
              "description": "Page number (zero-based)"
            },
            {
              "key": "size",
              "value": "20",
              "description": "Number of items per page"
            }
          ]
        },
        "description": "Search for all documents without filters"
      },
      "response": []
    },
    {
      "name": "Search by User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"user\": \"john\"\n}"
        },
        "url": {
          "raw": "http://localhost:8080/document-management/search?page=0&size=20",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["document-management", "search"],
          "query": [
            {
              "key": "page",
              "value": "0"
            },
            {
              "key": "size",
              "value": "20"
            }
          ]
        },
        "description": "Search documents by user name"
      },
      "response": []
    },
    {
      "name": "Search by Name",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"contract\"\n}"
        },
        "url": {
          "raw": "http://localhost:8080/document-management/search?page=0&size=20",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["document-management", "search"],
          "query": [
            {
              "key": "page",
              "value": "0"
            },
            {
              "key": "size",
              "value": "20"
            }
          ]
        },
        "description": "Search documents by document name (partial match)"
      },
      "response": []
    },
    {
      "name": "Search by Tags",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"tags\": [\"important\", \"legal\"]\n}"
        },
        "url": {
          "raw": "http://localhost:8080/document-management/search?page=0&size=20",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["document-management", "search"],
          "query": [
            {
              "key": "page",
              "value": "0"
            },
            {
              "key": "size",
              "value": "20"
            }
          ]
        },
        "description": "Search documents by tags (document must have ALL specified tags)"
      },
      "response": []
    },
    {
      "name": "Search with Multiple Filters",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"user\": \"john\",\n  \"name\": \"contract\",\n  \"tags\": [\"important\"]\n}"
        },
        "url": {
          "raw": "http://localhost:8080/document-management/search?page=0&size=20",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["document-management", "search"],
          "query": [
            {
              "key": "page",
              "value": "0"
            },
            {
              "key": "size",
              "value": "20"
            }
          ]
        },
        "description": "Search documents with multiple filters combined"
      },
      "response": []
    },
    {
      "name": "Download Document",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/document-management/download/:documentId",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["document-management", "download", ":documentId"],
          "variable": [
            {
              "key": "documentId",
              "value": "{{documentId}}",
              "description": "UUID of the document to download"
            }
          ]
        },
        "description": "üì• Get a presigned download URL for a document\n\nüìã Steps:\n1. First, run one of the Search requests\n2. Copy a 'documentId' (UUID) from the search results\n3. Paste it in the 'documentId' path variable below\n4. Send the request\n5. Copy the 'downloadUrl' from the response\n6. Open the URL in your browser to download the PDF\n\n‚è±Ô∏è Note: The presigned URL expires after a configured time (check application settings)"
      },
      "response": []
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:8080/actuator/health",
          "protocol": "http",
          "host": ["localhost"],
          "port": "8080",
          "path": ["actuator", "health"]
        },
        "description": "Check the health status of the application"
      },
      "response": []
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    },
    {
      "key": "documentId",
      "value": "REPLACE_WITH_ACTUAL_DOCUMENT_ID",
      "type": "string"
    }
  ]
}

