name: Pull Request Checks

on:
  pull_request:
    branches: [ main, master, develop ]

jobs:
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Check code formatting
        run: |
          mvn spotless:check || {
            echo "❌ Code formatting check failed!"
            echo "Please run: mvn spotless:apply"
            exit 1
          }

      - name: Run tests with coverage
        run: mvn clean test jacoco:report

      - name: Check test coverage
        run: |
          if [ -f target/site/jacoco/jacoco.csv ]; then
            echo "Test coverage report generated"
            cat target/site/jacoco/jacoco.csv
          fi

      - name: Comment PR with test results
        uses: actions/github-script@v7
        if: always()
        with:
          script: |
            const fs = require('fs');
            let comment = '## Test Results\n\n';
            
            if (fs.existsSync('target/surefire-reports')) {
              const files = fs.readdirSync('target/surefire-reports');
              const xmlFiles = files.filter(f => f.endsWith('.xml'));
              comment += `✅ Total test files: ${xmlFiles.length}\n`;
            }
            
            comment += '\n**Status:** Tests completed\n';
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Verify Maven build
        run: mvn clean install -DskipTests

      - name: Verify Docker build
        run: docker build -t document-management-service:pr-${{ github.event.number }} .

      - name: Generate PR summary
        run: |
          echo "## Build Summary ✅" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Code formatting: Passed" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Maven build: Success" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Docker build: Success" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Ready for review!** 🚀" >> $GITHUB_STEP_SUMMARY

