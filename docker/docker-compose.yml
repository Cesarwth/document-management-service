services:
  postgresql:
    container_name: postgresql_container
    image: bitnami/postgresql:15.4.0
    ports:
      - "5432:5432"
    networks:
      - batch_network
    volumes:
      - challenge_postgresql_data:/bitnami/postgresql
      - ./init-scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres123
      - POSTGRESQL_DATABASE=challenge
      - POSTGRESQL_POSTGRES_PASSWORD=postgres123
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d challenge"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  minio:
    image: minio/minio:latest
    container_name: minio
    restart: always
    ports:
      - "9000:9000"  # API S3
      - "9001:9001"  # MinIO Web Console
    networks:
      - batch_network
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    command: server --console-address ":9001" /data
    volumes:
      - challenge_minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  document-management-service:
    container_name: document_management_service
    build:
      context: ..
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - batch_network
    depends_on:
      postgresql:
        condition: service_healthy
      minio:
        condition: service_healthy
    environment:
      # Database configuration
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_NAME=challenge
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres123
      # MinIO configuration
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=admin123
      - MINIO_BUCKET_NAME=document-bucket
      - MINIO_PRESIGNED_URL_EXPIRY=3600
      # Server configuration
      - SERVER_PORT=8080
      # JVM options are set in Dockerfile
    deploy:
      resources:
        limits:
          memory: 256M  # Container limit (includes JVM heap + metaspace + OS)
        reservations:
          memory: 128M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  challenge_postgresql_data:
    driver: local
  challenge_minio_data:
    driver: local

networks:
  batch_network:
    driver: bridge
